plugins {
    id 'base'
}

apply from: "$rootDir/gradle/repositories.gradle"

configurations {
    dist {
      transitive false
    }
}

dependencies {
    dist 'com.h2database:h2:1.4.197'
    dist 'com.squareup.okhttp3:okhttp:3.9.1'
    dist 'com.squareup.okio:okio:1.13.0'
    dist 'com.uber.jaeger:jaeger-core:0.24.0'
    dist 'com.uber.jaeger:jaeger-thrift:0.24.0'
    dist 'com.zaxxer:HikariCP:3.1.0'
    dist 'io.dropwizard.metrics:metrics-core:3.1.0'
    dist 'javax.jms:javax.jms-api:2.0.1'
    dist 'javax.transaction:javax.transaction-api:1.2'
    dist 'org.apache.thrift:libthrift:0.10.0'
    dist 'org.hdrhistogram:HdrHistogram:2.1.10'
    dist 'org.jvnet.mimepull:mimepull:1.9.7'
    dist 'org.quartz-scheduler:quartz-jobs:2.3.0'
    dist 'org.quartz-scheduler:quartz:2.3.0'
    dist 'org.slf4j:slf4j-api:1.7.22'
    dist 'org.slf4j:slf4j-jdk14:1.7.22'
    dist 'org.wso2.andes.wso2:andes-client:3.2.55'
    dist 'org.wso2.carbon:org.wso2.carbon.core:5.1.0'
    dist 'org.wso2.orbit.com.lmax:disruptor:3.3.2.wso2v2'
    dist 'org.wso2.securevault:org.wso2.securevault:1.0.0-wso2v2'
    dist 'org.wso2.transport.file:org.wso2.transport.local-file-system:6.0.53'
    dist 'org.wso2.transport.http:org.wso2.transport.http.netty:6.0.250'

    dist project(':stdlib:ballerina-auth')
    dist project(':stdlib:ballerina-builtin')
    dist project(':ballerina-cli-utils')
    dist project(':ballerina-config')
    dist project(':ballerina-config-api')
    dist project(':ballerina-core')
    dist project(':ballerina-crypto')
    dist project(':ballerina-file')
    dist project(':ballerina-grpc')
    dist project(':ballerina-h2')
    dist project(':ballerina-http')
    dist project(':ballerina-internal')
    dist project(':ballerina-io')
    dist project(':ballerina-jms')
    dist project(':ballerina-lang')
    dist project(':ballerina-launcher')
    dist project(':ballerina-log-api')
    dist project(':ballerina-logging')
    dist project(':ballerina-math')
    dist project(':ballerina-mime')
    dist project(':ballerina-mysql')
    dist project(':ballerina-observability')
    dist project(':ballerina-reflect')
    dist project(':ballerina-runtime')
    dist project(':ballerina-socket')
    dist project(':ballerina-sql')
    dist project(':ballerina-streaming:siddhi-annotations')
    dist project(':ballerina-streaming:siddhi-core')
    dist project(':ballerina-streaming:siddhi-query-api')
    dist project(':ballerina-streaming:siddhi-query-compiler')
    dist project(':ballerina-streams')
    dist project(':ballerina-system')
    dist project(':ballerina-task')
    dist project(':ballerina-time')
    dist project(':ballerina-transactions')
    dist project(':ballerina-websub')
    dist project(':metrics-extensions:ballerina-metrics-extension')
    dist project(':metrics-extensions:ballerina-prometheus-extension')
    dist project(':strip-bouncycastle')
    dist project(':toml-parser')
    dist project(':tracing-extensions:ballerina-jaeger-extension')

}

task zip(type: Zip) {

    def basePath = '/' + project.name + '-' + project.version + '/'

    from configurations.dist {
        into(basePath + 'bvm/lib')
    }

    from ('bin'){
        into(basePath + 'bin')
    }

}

build {
    dependsOn zip
}

// This section makes sure that checkstyle/spotbug runs when dist is build.
project.afterEvaluate {
    configurations.dist.dependencies
        .findAll { it instanceof ProjectDependency }
        .each {
            it.dependencyProject.afterEvaluate {
                def dependencyCheck = it.tasks.find { it.name == 'check' }
                check.dependsOn dependencyCheck
            }
        }
}
