<!--
  ~ /*
  ~ * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~ *
  ~ * Licensed under the Apache License, Version 2.0 (the "License");
  ~ * you may not use this file except in compliance with the License.
  ~ * You may obtain a copy of the License at
  ~ *
  ~ * http://www.apache.org/licenses/LICENSE-2.0
  ~ *
  ~ * Unless required by applicable law or agreed to in writing, software
  ~ * distributed under the License is distributed on an "AS IS" BASIS,
  ~ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ * See the License for the specific language governing permissions and
  ~ * limitations under the License.
  ~ */
  -->
<assembly>
    <includeBaseDirectory>true</includeBaseDirectory>
    <baseDirectory>jballerina-tools-${project.version}</baseDirectory>
    <id>JBallerina Tools</id>
    <formats>
        <format>zip</format>
    </formats>

    <fileSets>
        <fileSet>
            <directory>
                ${project.build.directory}/lib
            </directory>
            <outputDirectory>lib</outputDirectory>
            <fileMode>0444</fileMode>
        </fileSet>
        <fileSet>
            <directory>
                ${project.build.directory}/extracted-distributions/jballerina-zip/jballerina-${project.version}
            </directory>
            <outputDirectory>.</outputDirectory>
        </fileSet>
        <fileSet>
            <directory>
                ${project.build.directory}/extracted-distributions/testerina-core-jar/META-INF/ballerina
            </directory>
            <outputDirectory>src</outputDirectory>
        </fileSet>
        <fileSet>
            <directory>
                ${project.build.directory}/api-docs
            </directory>
            <outputDirectory>docs/ballerina</outputDirectory>
        </fileSet>
        <fileSet>
            <directory>
                ../../../examples
            </directory>
            <outputDirectory>examples</outputDirectory>
        </fileSet>
        <fileSet>
            <directory>
                ${project.build.directory}/extracted-distributions/ballerina/
            </directory>
            <outputDirectory>src</outputDirectory>
        </fileSet>
        <!-- Lang-Server specific files -->
        <fileSet>
            <directory>
                ${project.build.directory}/extracted-distributions/language-server-core-zip/target/lib
            </directory>
            <outputDirectory>lib/tools/lang-server/lib</outputDirectory>
        </fileSet>
        <fileSet>
            <directory>
                ${project.build.directory}/extracted-distributions/language-server-core-zip/target/resources
            </directory>
            <outputDirectory>lib/tools/lang-server/resources</outputDirectory>
        </fileSet>
        <fileSet>
            <directory>
                ${project.build.directory}/extracted-distributions/composer-library-zip/composer-library-${project.version}
            </directory>
            <outputDirectory>lib/tools/composer-library/</outputDirectory>
        </fileSet>
    </fileSets>
    <files>
        <file>
            <source>bin/version.txt</source>
            <outputDirectory>lib/</outputDirectory>
            <filtered>true</filtered>
            <fileMode>644</fileMode>
        </file>
        <file>
            <source>LICENSE</source>
            <outputDirectory>.</outputDirectory>
            <filtered>true</filtered>
            <fileMode>644</fileMode>
        </file>
        <file>
            <source>README.md</source>
            <outputDirectory>.</outputDirectory>
            <filtered>true</filtered>
            <fileMode>644</fileMode>
        </file>
        <file>
            <source>COPYRIGHT</source>
            <outputDirectory>.</outputDirectory>
            <filtered>true</filtered>
            <fileMode>644</fileMode>
        </file>

        <!-- Lang-Server specific files -->
        <file>
            <source>resources/language-server-launcher.sh</source>
            <outputDirectory>lib/tools/lang-server/launcher/</outputDirectory>
            <filtered>true</filtered>
            <fileMode>755</fileMode>
        </file>
        <file>
            <source>resources/language-server-launcher.bat</source>
            <outputDirectory>lib/tools/lang-server/launcher/</outputDirectory>
            <filtered>true</filtered>
            <fileMode>644</fileMode>
        </file>
    </files>

    <dependencySets>
        <dependencySet>
            <outputDirectory>bre/lib</outputDirectory>
            <includes>
                <include>org.ballerinalang:ballerina-bir:jar</include>

                <!-- JVM Target related jars-->
                <include>org.ballerinalang:ballerina-jvm:jar</include>
                <include>org.ballerinalang:ballerina-backend-jvm:jar</include>
                <include>org.ow2.asm:asm:jar</include>

                <include>org.ballerinalang:ballerina-cli-utils:jar</include>
                <include>org.ballerinalang:testerina-core:jar</include>
                <include>org.ballerinalang:openapi-to-ballerina-generator:jar</include>
                <include>org.ballerinalang:ballerina-client-generator:jar</include>
                <include>org.ballerinalang:openapi-validator:jar</include>
                <!--
                    Keeping lang-server compiler under bre as this is being used
                    in ballerina OpenAPI CLI tools
                 -->
                <include>org.ballerinalang:language-server-compiler:jar</include>
                <include>org.ballerinalang:ballerina-formatter:jar</include>
                <include>org.ballerinalang:ballerina-packerina:jar</include>
                <include>org.ballerinalang:protobuf-ballerina:jar</include>
                <include>org.ballerinalang:ballerina-client-generator:jar</include>
                <include>org.ballerinalang:docerina:jar</include>
                <include>com.fasterxml.jackson.core:jackson-databind</include>
                <include>com.fasterxml.jackson.core:jackson-core</include>
                <include>com.fasterxml.jackson.core:jackson-annotations</include>
                <include>com.fasterxml.jackson.dataformat:jackson-dataformat-yaml</include>
                <include>com.hpe.kraal:kraal</include>
                <include>org.jetbrains.kotlin:kotlin-stdlib</include>
                <include>org.ow2.asm:asm</include>
                <include>org.ow2.asm:asm-analysis</include>
                <include>org.ow2.asm:asm-tree</include>
                <include>org.ow2.asm:asm-util</include>
            </includes>
            <unpack>false</unpack>
        </dependencySet>
        <!-- Lang-Server specific jars -->
        <dependencySet>
            <outputDirectory>lib/tools/lang-server/lib</outputDirectory>
            <includes>
                <include>org.ballerinalang:language-server-core:jar</include>
                <include>org.ballerinalang:language-server-stdio-launcher:jar</include>
            </includes>
            <unpack>false</unpack>
        </dependencySet>
    </dependencySets>
</assembly>
