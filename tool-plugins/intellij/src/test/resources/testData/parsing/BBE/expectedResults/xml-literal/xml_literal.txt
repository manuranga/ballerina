Ballerina File(0,1511)
  BallerinaImportDeclarationImpl(IMPORT_DECLARATION)(0,20)
    PsiElement(import)('import')(0,6)
    PsiWhiteSpace(' ')(6,7)
    BallerinaOrgNameImpl(ORG_NAME)(7,16)
      PsiElement(identifier)('ballerina')(7,16)
    PsiElement(/)('/')(16,17)
    BallerinaCompletePackageNameImpl(COMPLETE_PACKAGE_NAME)(17,19)
      BallerinaPackageNameImpl(PACKAGE_NAME)(17,19)
        PsiElement(identifier)('io')(17,19)
    PsiElement(;)(';')(19,20)
  PsiWhiteSpace('\n\n')(20,22)
  BallerinaDefinitionImpl(DEFINITION)(22,1511)
    BallerinaFunctionDefinitionImpl(FUNCTION_DEFINITION)(22,1511)
      PsiElement(PUBLIC)('public')(22,28)
      PsiWhiteSpace(' ')(28,29)
      PsiElement(function)('function')(29,37)
      PsiWhiteSpace(' ')(37,38)
      BallerinaCallableUnitSignatureImpl(CALLABLE_UNIT_SIGNATURE)(38,44)
        BallerinaAnyIdentifierNameImpl(ANY_IDENTIFIER_NAME)(38,42)
          PsiElement(identifier)('main')(38,42)
        PsiElement(()('(')(42,43)
        PsiElement())(')')(43,44)
      PsiWhiteSpace(' ')(44,45)
      BallerinaCallableUnitBodyImpl(CALLABLE_UNIT_BODY)(45,1511)
        PsiElement({)('{')(45,46)
        PsiWhiteSpace('\n\n    ')(46,52)
        PsiComment(LINE_COMMENT)('// A complex XML defined using the literal syntax, which contains nested elements of different types.')(52,153)
        PsiWhiteSpace('\n    ')(153,158)
        BallerinaStatementImpl(STATEMENT)(158,1489)
          BallerinaVariableDefinitionStatementImpl(VARIABLE_DEFINITION_STATEMENT)(158,1489)
            BallerinaVariableDefinitionStatementWithAssignmentImpl(VARIABLE_DEFINITION_STATEMENT_WITH_ASSIGNMENT)(158,1489)
              BallerinaSimpleTypeNameImpl(SIMPLE_TYPE_NAME)(158,161)
                BallerinaReferenceTypeNameImpl(REFERENCE_TYPE_NAME)(158,161)
                  BallerinaBuiltInReferenceTypeNameImpl(BUILT_IN_REFERENCE_TYPE_NAME)(158,161)
                    BallerinaXmlTypeNameImpl(XML_TYPE_NAME)(158,161)
                      PsiElement(xml)('xml')(158,161)
              PsiWhiteSpace(' ')(161,162)
              BallerinaBindingPatternImpl(BINDING_PATTERN)(162,164)
                PsiElement(identifier)('x1')(162,164)
              PsiWhiteSpace(' ')(164,165)
              PsiElement(=)('=')(165,166)
              PsiWhiteSpace(' ')(166,167)
              BallerinaXmlLiteralExpressionImpl(XML_LITERAL_EXPRESSION)(167,1488)
                BallerinaXmlLiteralImpl(XML_LITERAL)(167,1488)
                  PsiElement(XML_LITERAL_START)('xml `')(167,172)
                  BallerinaXmlItemImpl(XML_ITEM)(172,1487)
                    BallerinaElementImpl(ELEMENT)(172,1487)
                      BallerinaStartTagImpl(START_TAG)(172,178)
                        PsiElement(XML_TAG_OPEN)('<')(172,173)
                        BallerinaXmlQualifiedNameImpl(XML_QUALIFIED_NAME)(173,177)
                          PsiElement(XML_QNAME)('book')(173,177)
                        PsiElement(XML_TAG_CLOSE)('>')(177,178)
                      BallerinaContentImpl(CONTENT)(178,1473)
                        BallerinaXmlTextImpl(XML_TEXT)(178,199)
                          PsiElement(XML_TEXT_SEQUENCE)('\n                    ')(178,199)
                        BallerinaElementImpl(ELEMENT)(199,227)
                          BallerinaStartTagImpl(START_TAG)(199,205)
                            PsiElement(XML_TAG_OPEN)('<')(199,200)
                            BallerinaXmlQualifiedNameImpl(XML_QUALIFIED_NAME)(200,204)
                              PsiElement(XML_QNAME)('name')(200,204)
                            PsiElement(XML_TAG_CLOSE)('>')(204,205)
                          BallerinaContentImpl(CONTENT)(205,220)
                            BallerinaXmlTextImpl(XML_TEXT)(205,220)
                              PsiElement(XML_TEXT_SEQUENCE)('Sherlock Holmes')(205,220)
                          BallerinaCloseTagImpl(CLOSE_TAG)(220,227)
                            PsiElement(XML_TAG_OPEN_SLASH)('</')(220,222)
                            BallerinaXmlQualifiedNameImpl(XML_QUALIFIED_NAME)(222,226)
                              PsiElement(XML_QNAME)('name')(222,226)
                            PsiElement(XML_TAG_CLOSE)('>')(226,227)
                        BallerinaXmlTextImpl(XML_TEXT)(227,248)
                          PsiElement(XML_TEXT_SEQUENCE)('\n                    ')(227,248)
                        BallerinaElementImpl(ELEMENT)(248,287)
                          BallerinaStartTagImpl(START_TAG)(248,256)
                            PsiElement(XML_TAG_OPEN)('<')(248,249)
                            BallerinaXmlQualifiedNameImpl(XML_QUALIFIED_NAME)(249,255)
                              PsiElement(XML_QNAME)('author')(249,255)
                            PsiElement(XML_TAG_CLOSE)('>')(255,256)
                          BallerinaContentImpl(CONTENT)(256,278)
                            BallerinaXmlTextImpl(XML_TEXT)(256,278)
                              PsiElement(XML_TEXT_SEQUENCE)('Sir Arthur Conan Doyle')(256,278)
                          BallerinaCloseTagImpl(CLOSE_TAG)(278,287)
                            PsiElement(XML_TAG_OPEN_SLASH)('</')(278,280)
                            BallerinaXmlQualifiedNameImpl(XML_QUALIFIED_NAME)(280,286)
                              PsiElement(XML_QNAME)('author')(280,286)
                            PsiElement(XML_TAG_CLOSE)('>')(286,287)
                        BallerinaXmlTextImpl(XML_TEXT)(287,308)
                          PsiElement(XML_TEXT_SEQUENCE)('\n                    ')(287,308)
                        BallerinaCommentImpl(COMMENT)(308,1454)
                          PsiElement(XML_COMMENT_START)('<!--')(308,312)
                          PsiElement(XML_COMMENT_TEXT)('Price: $10-->\n                  </book>`;\n    io:println(x1);\n\n    // Defines namespaces. These are visible to all the XML literals defined from this point onwards.  \n    xmlns "http://ballerina.com/";\n    xmlns "http://ballerina.com/aa" as ns0;\n\n    // Creates an XML element. Previously-defined namespaces will be added to the element. \n    // The defined prefixes can be applied to elements and attributes inside the element. \n    xml x2 = xml `<book ns0:status="available">\n                    <ns0:name>Sherlock Holmes</ns0:name>\n                    <author>Sir Arthur Conan Doyle</author>\n                    <!--Price: $10-->\n                  </book>`;\n    io:println(x2);\n\n    // XML can be interpolated with expressions using the `${}` notation.\n    // The expression can be a previously-defined variable, arithmetic expressions, or even a function call. \n    // These expressions are evaluated at runtime.\n    string title = "(Sir)";\n\n    xml x3 = xml `<ns0:newBook>\n                    <name>Sherlock Holmes</name>\n                    <author>${title} Arthur Conan Doyle</author>\n                    <!--Price: $${ 40 / 5 + 4 }')(312,1451)
                          PsiElement(XML_COMMENT_END)('-->')(1451,1454)
                        BallerinaXmlTextImpl(XML_TEXT)(1454,1473)
                          PsiElement(XML_TEXT_SEQUENCE)('\n                  ')(1454,1473)
                      BallerinaCloseTagImpl(CLOSE_TAG)(1473,1487)
                        PsiElement(XML_TAG_OPEN_SLASH)('</')(1473,1475)
                        BallerinaXmlQualifiedNameImpl(XML_QUALIFIED_NAME)(1475,1486)
                          PsiElement(XML_QNAME)('ns0')(1475,1478)
                          PsiElement(QNAME_SEPARATOR)(':')(1478,1479)
                          PsiElement(XML_QNAME)('newBook')(1479,1486)
                        PsiElement(XML_TAG_CLOSE)('>')(1486,1487)
                  PsiElement(XML_LITERAL_END)('`')(1487,1488)
              PsiElement(;)(';')(1488,1489)
        PsiWhiteSpace('\n    ')(1489,1494)
        BallerinaStatementImpl(STATEMENT)(1494,1509)
          BallerinaExpressionStmtImpl(EXPRESSION_STMT)(1494,1509)
            BallerinaVariableReferenceExpressionImpl(VARIABLE_REFERENCE_EXPRESSION)(1494,1508)
              BallerinaFunctionInvocationReferenceImpl(FUNCTION_INVOCATION_REFERENCE)(1494,1508)
                BallerinaFunctionInvocationImpl(FUNCTION_INVOCATION)(1494,1508)
                  BallerinaFunctionNameReferenceImpl(FUNCTION_NAME_REFERENCE)(1494,1504)
                    BallerinaPackageReferenceImpl(PACKAGE_REFERENCE)(1494,1497)
                      PsiElement(identifier)('io')(1494,1496)
                      PsiElement(:)(':')(1496,1497)
                    BallerinaAnyIdentifierNameImpl(ANY_IDENTIFIER_NAME)(1497,1504)
                      PsiElement(identifier)('println')(1497,1504)
                  PsiElement(()('(')(1504,1505)
                  BallerinaInvocationArgListImpl(INVOCATION_ARG_LIST)(1505,1507)
                    BallerinaInvocationArgImpl(INVOCATION_ARG)(1505,1507)
                      BallerinaVariableReferenceExpressionImpl(VARIABLE_REFERENCE_EXPRESSION)(1505,1507)
                        BallerinaSimpleVariableReferenceImpl(SIMPLE_VARIABLE_REFERENCE)(1505,1507)
                          BallerinaNameReferenceImpl(NAME_REFERENCE)(1505,1507)
                            PsiElement(identifier)('x3')(1505,1507)
                  PsiElement())(')')(1507,1508)
            PsiElement(;)(';')(1508,1509)
        PsiWhiteSpace('\n')(1509,1510)
        PsiElement(})('}')(1510,1511)
